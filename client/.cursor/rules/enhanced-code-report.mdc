---
description: Framework for US Enhanced Code Report implementation
globs: 
alwaysApply: false
---

# Enhanced Code Report Framework

This document outlines the framework for the US Enhanced Code Report implementation in the VoIP Accelerator application.

## Overview

The Enhanced Code Report analyzes US rate deck CSV files against the LERG (Local Exchange Routing Guide) state ([lerg-store.ts](mdc:client/src/stores/lerg-store.ts)) to provide insights into coverage, pricing. It gives users a detailed view of how their rate deck compares to the full set of available NPAs in the US, Canada, and other +1 countries.

## Key Requirements

1. **Automatic Generation**: The report should be generated automatically after US CSV files are uploaded
2. **File Support**: Should work with both single file and dual file uploads
3. **LERG Integration**: Must retrieve and use LERG data for accurate NPA and statistics from [lerg-store.ts](mdc:client/src/stores/lerg-store.ts) not IndexDB
4. **Performance**: Should handle large CSV files by sampling if necessary
5. **UI Display**: Should show the report with coverage statistics immediately after generation

## Data Flow

1. **User Action**: User uploads a US CSV file
2. **File Processing**: CSV is parsed and stored in the Dexie database
3. **LERG Data Preparation**: LERG data is retrieved from the store and passed for comparison
4. **Worker Processing**: The enhanced code report worker compares the uploaded data against LERG data
5. **Report Generation**: The worker creates a report showing coverage statistics and pricing details
6. **Storage**: The report is stored in the Pinia store
7. **UI Update**: The report component displays the stored report

## Implementation Details

### LERG Data Preparation

LERG data is structured in three main categories:
- **US States**: Area codes associated with US states
- **Canadian Provinces**: Area codes associated with Canadian provinces
- **Other Countries**: Area codes for international countries

For the worker to process this data properly, it needs:
- Complete list of NPAs by state/province
- Total count of NPAs per country
- Mapping of NPAs to their respective countries/regions

### Worker Processing

The worker takes:
1. Filename - identifies the report in the store
2. File data - standardized records from the uploaded CSV
3. LERG data - prepared from the LERG store with state and country NPAs

It outputs a structured report that includes:
- Country coverage statistics
- State/province breakdown (for US/Canada)
- NPA coverage percentages
- Pricing statistics by region

### Report Structure

```typescript
// Enhanced Code Report Structure
interface USEnhancedCodeReport {
  file1: USEnhancedFileReport; // Primary file report
  file2?: USEnhancedFileReport; // Secondary file report (for dual file uploads)
}

interface USEnhancedFileReport {
  fileName: string;
  totalCodes: number;
  countries: USCountryBreakdown[];
}

interface USCountryBreakdown {
  countryCode: string;
  countryName: string;
  npaCoverage: number; // Percentage of NPAs covered
  totalNPAs: number;   // Total NPAs in LERG for this country
  npas: string[];      // List of NPAs in the file
  states?: USStateBreakdown[]; // State breakdown for US/Canada
}
```

## Questions to Clarify

- Is the LERG data being properly loaded on UsView page load?
- Are the NPAs from uploaded files being correctly formatted and compared?
- Is the worker receiving all the necessary LERG data to perform comparisons?
- Are there any console errors that indicate issues with data format?

## Next Steps

1. Update debugging to confirm LERG data is properly loaded before any report generation
2. Fix any issues with passing LERG data to the enhanced code report worker
3. Ensure the UI properly displays the LERG count statistics
4. Update the stats calculation to show the correct percentage of covered NPAs 